# This is a basic workflow to help you get started with Actions

name: Build OS

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  # push:
    # branches: [ "main" ]
  # pull_request:
    # branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4
      - name: Build 
        run: |
          wget https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh -O brew-install.sh
          ls -al
          chmod +x ./brew-install.sh
          CI=1 ./brew-install.sh
          rm ./brew-install.sh
          sudo apt-get install build-essential -y
           echo >> /home/runner/.bashrc
          echo 'eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"' >> /home/runner/.bashrc
          eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"
          brew install gmp
          brew install mpfr
          brew install nasm
          brew install libmpc
          brew install gcc
          echo installing gcc cross compiler
          cd ~/work/NuggetOS/NuggetOS
          ls -al
          #echo running nasm
          # nasm -f bin ./src/boot.asm -o ./boot.bin
          # ls -al
          # ls -al /usr/bin/gcc-*
          # whereis gcc-14
          # sudo export CC=/home/linuxbrew/.linuxbrew/bin/gcc-14
          # sudo export LD=/home/linuxbrew/.linuxbrew/bin/gcc-14
          # sudo export PREFIX="/usr/local/i386elfgcc"
          # sudo export TARGET=i386-elf
          # sudo export PATH="$PREFIX/bin:$PATH"
          # mkdir /tmp/src
          # cd /tmp/src
          # curl -O https://ftp.gnu.org/gnu/binutils/binutils-2.43.tar.gz
          # tar xf binutils-2.43.tar.gz
          # mkdir binutils-build
          # cd binutils-build
          # sudo ../binutils-2.43/configure --target=$TARGET --enable-interwork --enable-multilib --disable-nls --disable-werror --prefix=$PREFIX 2>&1 | tee configure.log
          # sudo make all install 2>&1 | tee make.log
          # cd /tmp/src/
          # curl -O https://ftp.gnu.org/gnu/gcc/gcc-14.2.0/gcc-14.2.0.tar.gz
          # tar xf ./gcc-14.2.0.tar.gz
          # mkdir gcc-build
          # cd gcc-build
          # sudo ../gcc-14.2.0/configure --target=$TARGET --prefix="$PREFIX" --disable-nls --disable-libssp --enable-languages=c --without-headers
          # sudo make all-gcc
          # sudo make all-target-libgcc
          # sudo make install-gcc
          # sudo make install-target-libgcc
          ls /home/linuxbrew/.linuxbrew/bin/
      - uses: actions/upload-artifact@v4
        with:
          name: boot.bin
          path: ./boot.bin
